<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.mashupmedia</groupId>
	<artifactId>mashupmedia</artifactId>
	<packaging>war</packaging>
	<version>3.0</version>
	<name>mashupmedia</name>
	<url>http://maven.apache.org</url>

	<properties>
		<!-- spring.version>3.2.6.RELEASE</spring.version -->
		<spring.version>4.3.9.RELEASE</spring.version>
		<spring.security.version>4.2.3.RELEASE</spring.security.version>
		<hibernate.version>5.2.12.Final</hibernate.version>		
		<hibernate.search.version>5.8.2.Final</hibernate.search.version>
		<tiles.version>3.0.8</tiles.version>
		<slf4j.version>1.7.25</slf4j.version>
		<!-- 
		<hsqldb.version>2.3.4</hsqldb.version> 
		-->
		<jackson.version>2.9.2</jackson.version>
		<h2database.version>1.4.196</h2database.version>

		<!-- Default project properties -->
		<exploded.war.path>${project.build.directory}/mashupmedia/</exploded.war.path>
		<message.cache.seconds>1</message.cache.seconds>
		<log4j.mashupmedia.level>debug</log4j.mashupmedia.level>
		<log4j.focus.level>debug</log4j.focus.level>
		<log4j.root.level>info</log4j.root.level>
		<test.music.folder>Music</test.music.folder>
	</properties>

	<dependencies>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jasypt</groupId>
			<artifactId>jasypt</artifactId>
			<version>1.9.2</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
			<version>${hibernate.version}</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-search-orm</artifactId>
			<version>${hibernate.search.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- dependency> <groupId>org.springframework</groupId> <artifactId>spring-aspects</artifactId> 
			<version>${spring.version}</version> </dependency -->

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>



		<dependency>
			<groupId>javax.xml</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.1</version>
		</dependency>

		<dependency>
			<groupId>javax.xml</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>2.1</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring.security.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.security.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<version>${spring.security.version}</version>
		</dependency>


		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-core</artifactId>
			<version>${tiles.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>jcl-over-slf4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>


		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-jsp</artifactId>
			<version>${tiles.version}</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>

		<!-- <dependency> <groupId>commons-dbcp</groupId> <artifactId>commons-dbcp</artifactId> 
			<version>1.4</version> </dependency> -->

		<dependency>
			<groupId>com.mchange</groupId>
			<artifactId>c3p0</artifactId>
			<version>0.9.5.2</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
			<scope>runtime</scope>
		</dependency>


		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<scope>runtime</scope>
			<version>1.1.2</version>
		</dependency>

		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>c</artifactId>
			<version>1.1.2</version>
			<scope>runtime</scope>
			<type>tld</type>
		</dependency>
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>fmt</artifactId>
			<version>1.1.2</version>
			<scope>runtime</scope>
			<type>tld</type>
		</dependency>
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>fn</artifactId>
			<version>1.1.1</version>
			<scope>runtime</scope>
			<type>tld</type>
		</dependency>

		<dependency>
		    <groupId>com.h2database</groupId>
		    <artifactId>h2</artifactId>
		    <version>${h2database.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.7</version>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.3</version>
		</dependency>


    <dependency>
        <groupId>net.jthink</groupId>
        <artifactId>jaudiotagger</artifactId>
        <version>2.2.3</version>
    </dependency>

		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>3.2.5</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>net.sf.json-lib</groupId>
			<artifactId>json-lib</artifactId>
			<version>2.4</version>
			<classifier>jdk15</classifier>
		</dependency>

		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.11.1</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.drewnoakes</groupId>
			<artifactId>metadata-extractor</artifactId>
			<version>2.10.1</version>
		</dependency>
		<dependency>
			<groupId>org.imgscalr</groupId>
			<artifactId>imgscalr-lib</artifactId>
			<version>4.2</version>
		</dependency>
	</dependencies>

	<repositories>

		<repository>
			<id>Sauron Software</id>
			<url>http://repo.novus.com/releases/</url>
			<snapshots>
				<enabled>true</enabled>

			</snapshots>
		</repository>

    <repository>
        <id>jaudiotagger-repository</id>
        <url>https://dl.bintray.com/ijabz/maven</url>
    </repository>

	</repositories>




	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<testResources>
			<testResource>
				<directory>src/main/webapp</directory>
				<filtering>true</filtering>
			</testResource>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>

		<plugins>

			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<path>/${project.name}</path>
					<warDirectory>${exploded.war.path}</warDirectory>
					<warSourceDirectory>${exploded.war.path}</warSourceDirectory>
					<systemProperties>
						<JAVA_OPTS>-Xms256m -Xmx512m -XX:MaxPermSize=256m</JAVA_OPTS>
					</systemProperties>
				</configuration>
				<executions>
					<execution>
						<id>tomcat-run</id>
						<goals>
							<goal>exec-war-only</goal>
						</goals>
						<phase>install</phase>
						<configuration>
							<path>/${project.name}</path>
							<finalName>${project.name}.jar</finalName>
							<charset>utf-8</charset>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<webappDirectory>${exploded.war.path}</webappDirectory>
					<warName>${project.name}</warName>
					<webResources>
						<resource>
							<directory>src/main/webapp</directory>
							<filtering>true</filtering>
							<includes>
								<include> **/*.xml </include>
								<include> **/*.properties </include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<encoding>utf-8</encoding>
					<nonFilteredFileExtensions>
						<nonFilteredFileExtension>pdf</nonFilteredFileExtension>
						<nonFilteredFileExtension>swf</nonFilteredFileExtension>
						<nonFilteredFileExtension>mp3</nonFilteredFileExtension>
					</nonFilteredFileExtensions>
				</configuration>
				<executions>
					<execution>
						<!-- Maven execution to just copy the web files over to the exploded 
							war folder without restarting the application server. To use just call: mvn 
							-Denv=rapidworkflow-<id> process-resources. -->
						<id>copy-web-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<overwrite>true</overwrite>
							<outputDirectory>${exploded.war.path}</outputDirectory>
							<resources>
								<resource>
									<filtering>true</filtering>
									<directory>${basedir}/src/main/webapp/</directory>
									<excludes>
										<exclude>**/*.xml</exclude>
										<exclude>**/*.jar</exclude>
										<exclude>**/*.class</exclude>
									</excludes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- <plugin> <groupId>org.mortbay.jetty</groupId> <artifactId>maven-jetty-plugin</artifactId> 
				<version>6.1.26</version> <configuration> <webApp>${exploded.war.path}</webApp> 
				</configuration> </plugin> -->

		</plugins>
	</build>

	<profiles>
		<profile>
			<id>mashupmedia-local</id>
			<activation>
				<property>
					<name>env</name>
					<value>mashupmedia-local</value>
				</property>
			</activation>
			<properties>
				<exploded.war.path>${project.build.directory}/webapp</exploded.war.path>
				<message.cache.seconds>1</message.cache.seconds>
				<log4j.mashupmedia.level>debug</log4j.mashupmedia.level>
				<log4j.focus.level>debug</log4j.focus.level>
				<log4j.root.level>info</log4j.root.level>
				<test.music.folder>C:/andy/incoming/Hot</test.music.folder>
			</properties>
		</profile>
		<profile>
			<id>mashupmedia-production</id>
			<activation>
				<property>
					<name>env</name>
					<value>mashupmedia-production</value>
				</property>
			</activation>
			<properties>
				<exploded.war.path>${project.build.directory}/webapp</exploded.war.path>
				<message.cache.seconds>1800</message.cache.seconds>
				<log4j.mashupmedia.level>error</log4j.mashupmedia.level>
				<log4j.focus.level>error</log4j.focus.level>
				<log4j.root.level>error</log4j.root.level>
				<test.music.folder>C:/andy/incoming/Hot</test.music.folder>
			</properties>
		</profile>
	</profiles>


</project>