/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.37
 * Generated at: 2013-06-24 14:41:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.scripts;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class mashupmedia_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/tld/fn-1.1.1.tld", Long.valueOf(1326190222000L));
    _jspx_dependants.put("/WEB-INF/tld/c-1.1.2.tld", Long.valueOf(1326190220000L));
    _jspx_dependants.put("/WEB-INF/tld/fmt-1.1.2.tld", Long.valueOf(1326190220000L));
    _jspx_dependants.put("/WEB-INF/jsp/inc/taglibs.jsp", Long.valueOf(1361894262000L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fsetLocale_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fsetBundle_0026_005fbasename_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ffmt_005fsetLocale_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fsetBundle_0026_005fbasename_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ffmt_005fsetLocale_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005ffmt_005fsetBundle_0026_005fbasename_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_fmt_005fsetLocale_005f0(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
      if (_jspx_meth_fmt_005fsetBundle_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("var isLoadingContent = false;\r\n");
      out.write("var currentPage = \"\";\r\n");
      out.write("\r\n");
      out.write("var addressRandomAlbums = \"address-random-albums\";\r\n");
      out.write("var addressQuickSearchMediaItems = \"address-quick-search-media-items\";\r\n");
      out.write("var addressListArtists = \"address-list-artists\";\r\n");
      out.write("var addressListAlbums = \"address-list-albums\";\r\n");
      out.write("var addressListFilterAlbums = \"address-filter-albums\";\r\n");
      out.write("var addressFilterAlbumsByLetter = \"address-filter-albums-letter-\";\r\n");
      out.write("var addressAlbum = \"address-load-album\";\r\n");
      out.write("var addressArtist = \"address-artist-\";\r\n");
      out.write("var addressListPlaylists = \"address-list-playlists\";\r\n");
      out.write("var addressPlaylist = \"address-playlist-\";\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function() {\r\n");
      out.write("    \r\n");
      out.write("\t$(document).ajaxComplete(function(e, xhr, settings) {\r\n");
      out.write("\t\tvar responseHtml = xhr.responseText;\r\n");
      out.write("\t\tif (responseHtml.indexOf(\"@LOGGED-OUT@\") >= 0) {\r\n");
      out.write("\t\t\twindow.location.reload();\r\n");
      out.write("\t\t}\t\t\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\t\r\n");
      out.write("\tvar contextUrl = \"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\";\r\n");
      out.write("\tmashupMedia.setContextUrl(contextUrl);\r\n");
      out.write("\t$(\".jp-previous\").click(function() {\r\n");
      out.write("\t\tmashupMedia.playPreviousSong();\r\n");
      out.write("\t});\r\n");
      out.write("\t$(\".jp-next\").click(function() {\r\n");
      out.write("\t\tmashupMedia.playNextSong();\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\t$.address.init(function(event) {\r\n");
      out.write("\t\t$(\"#quick-search\").address();\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$.address.change(function(event) {\r\n");
      out.write("\t\tisLoadingContent = false;\r\n");
      out.write("\t\t\t\t \r\n");
      out.write("\t\tif($(\"#top-bar-music-player .songs\").length > 0) {\t\t\t\r\n");
      out.write("\t\t\tcloseSongPlaylist();\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar address = event.value;\r\n");
      out.write("\t\taddress = address.replace(\"/\", \"\");\r\n");
      out.write("\t\taddress = $.trim(address);\r\n");
      out.write("\t\tcurrentPage = address;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif (textStartsWith(address, addressAlbum)) {\r\n");
      out.write("\t\t\tvar albumId = getNumberFromText(address);\r\n");
      out.write("\t\t\tmashupMedia.showAlbum(albumId);\r\n");
      out.write("\t\t} else if (textStartsWith(address, addressListArtists)) {\r\n");
      out.write("\t\t\tloadArtists();\r\n");
      out.write("\t\t} else if (textStartsWith(address, addressListAlbums)) {\r\n");
      out.write("\t\t\tmashupMedia.filterAlbumsSearchLetter = \"\";\r\n");
      out.write("\t\t\tmashupMedia.filterPageNumber = 0;\r\n");
      out.write("\t\t\tloadAlbums(false);\r\n");
      out.write("\t\t} else if (textStartsWith(address, addressFilterAlbumsByLetter)) {\r\n");
      out.write("\t\t    \taddress = address.replace(\"address:/\", \"\");\r\n");
      out.write("\t\t\tvar searchLetter = address.replace(\"\" + addressFilterAlbumsByLetter, \"\");\r\n");
      out.write("\t\t\tmashupMedia.filterAlbumsSearchLetter = searchLetter;\r\n");
      out.write("\t\t\tmashupMedia.filterPageNumber = 0;\r\n");
      out.write("\t\t\tloadAlbums(false);\t\t\t\r\n");
      out.write("\t\t} else if (textStartsWith(address, addressRandomAlbums) || address == \"\") {\r\n");
      out.write("\t\t\tloadRandomAlbums(false);\r\n");
      out.write("\t\t} else if (textStartsWith(address, addressArtist)) {\r\n");
      out.write("\t\t\tvar artistId = parseId(address, addressArtist);\r\n");
      out.write("\t\t\tif (isNaN(artistId)) {\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tloadArtist(artistId)\r\n");
      out.write("\t\t} else if (textStartsWith(address, addressQuickSearchMediaItems)) {\t\t    \t\r\n");
      out.write("\t\t\tmashupMedia.filterPageNumber = 0;\r\n");
      out.write("\t\t\t$(\"#quick-search input[name=genreId]\").val(\"\");\r\n");
      out.write("\t\t\tloadSongSearchResults(false);\t\t\t\r\n");
      out.write("\t\t} else if (textStartsWith(address, addressListPlaylists)) {\t\t\t\r\n");
      out.write("\t\t\tloadPlaylists();\r\n");
      out.write("\t\t}  else if (textStartsWith(address, addressPlaylist)) {\r\n");
      out.write("    \t\t\tvar playlistId = parseId(address, addressPlaylist);\r\n");
      out.write("    \t\t\tif (isNaN(playlistId)) {\r\n");
      out.write("    \t\t\t    return;\r\n");
      out.write("    \t\t\t}\r\n");
      out.write("    \t\t\tloadPlaylist(playlistId);\r\n");
      out.write("\t\t} \r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("var mashupMedia = new function() {\r\n");
      out.write("\tthis.contextUrl = $(\"#contextUrl\").val();\r\n");
      out.write("\tthis.setContextUrl = function(contextUrl) {\r\n");
      out.write("\t\tthis.contextUrl = contextUrl;\r\n");
      out.write("\t};\r\n");
      out.write("\tthis.playingClass = \"playing\";\r\n");
      out.write("\tthis.jPlayerId = \"#jquery_jplayer_1\";\r\n");
      out.write("\tthis.jPlayerContainerId = \"#jp_container_1\";\r\n");
      out.write("\tthis.filterPageNumber = 0;\r\n");
      out.write("\tthis.filterAlbumsSearchLetter = \"\";\r\n");
      out.write("\t\r\n");
      out.write("\tthis.loadLastAccessedPlaylist = function() {\t\t\t\r\n");
      out.write("\t\t$.get(mashupMedia.contextUrl + \"app/ajax/playlist/play/current\", function(data) {\r\n");
      out.write("\t\t\tvar playlistId = data.mediaItem.playlistId;\r\n");
      out.write("\t\t\tvar mediaItemId = data.mediaItem.id;\t\t\t\t\t\t\r\n");
      out.write("\t\t\tmashupMedia.loadSongFromPlaylist(playlistId, mediaItemId, false);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("\t\r\n");
      out.write("\tthis.loadPlaylist = function(playlistId) {\r\n");
      out.write("\t\t$.get(mashupMedia.contextUrl + \"app/ajax/playlist/play/id/\" + playlistId, function(data) {\r\n");
      out.write("\t\t\tvar playlistId = data.mediaItem.playlistId;\r\n");
      out.write("\t\t\tvar mediaItemId = data.mediaItem.id;\r\n");
      out.write("\t\t\tmashupMedia.loadSongFromPlaylist(playlistId, mediaItemId, false);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("\t\r\n");
      out.write("\tthis.loadSongFromPlaylist = function(playlistId, mediaItemId, isAutoPlay) {\r\n");
      out.write("\t\tif (playlistId.length == 0 || isNaN(playlistId) || playlistId < 1) {\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif (mediaItemId.length == 0 || isNaN(mediaItemId) || mediaItemId < 1) {\r\n");
      out.write("\t\t\t$.get(mashupMedia.contextUrl + \"app/ajax/playlist/id/\" + playlistId, {\r\n");
      out.write("\t\t\t\t\"webFormatType\" : \"json\",\r\n");
      out.write("\t\t\t\t\"updateLastAccessedToNow\" : true\r\n");
      out.write("\t\t\t}, function(data) {\r\n");
      out.write("\t\t\t\tvar playlistId = data.playlist.id;\r\n");
      out.write("\t\t\t\tvar playlistName = data.playlist.name;\t\t\t\t\r\n");
      out.write("\t\t\t\tmashupMedia.showSongInfo(\"\", \"\", false, 0, 0, playlistName, playlistId, \"\", 0);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("/*\t\t\r\n");
      out.write("\t\tif (mediaItemId < 1) {\r\n");
      out.write("\t\t    return;\r\n");
      out.write("\t\t}\r\n");
      out.write("*/\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$.get(mashupMedia.contextUrl + \"app/ajax/music/play/media-item/\" + mediaItemId, {\r\n");
      out.write("\t\t\t\"playlistId\" : playlistId\r\n");
      out.write("\t\t}, function(data) {\t\t    \r\n");
      out.write("\t\t\t$(\"#media-player-script\").html(data);\r\n");
      out.write("\t\t\tsetupJPlayer(isAutoPlay);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tthis.playNextSong = function() {\r\n");
      out.write("\t\t$.get(mashupMedia.contextUrl\r\n");
      out.write("\t\t\t\t+ \"app/ajax/music/play/next\", function(data) {\t\t\t\t\r\n");
      out.write("\t\t\tvar mediaItemId = data.mediaItem.id;\r\n");
      out.write("\t\t\tif (mediaItemId < 1) {\r\n");
      out.write("\t\t\t\tmashupMedia.destroyPlayer();\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar playlistId = $(\"#current-playlist-id\").val();\r\n");
      out.write("\t\t\tmashupMedia.loadSongFromPlaylist(playlistId, mediaItemId, true);\r\n");
      out.write("\t\t\tupdatePlaylistView(mediaItemId);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tthis.playPreviousSong = function() {\r\n");
      out.write("\t\t$.get(mashupMedia.contextUrl\r\n");
      out.write("\t\t\t\t+ \"app/ajax/music/play/previous\", function(data) {\r\n");
      out.write("\t\t\tvar mediaItemId = data.mediaItem.id;\r\n");
      out.write("\t\t\tvar playlistId = $(\"#current-playlist-id\").val();\r\n");
      out.write("\t\t\tmashupMedia.loadSongFromPlaylist(playlistId, mediaItemId, true);\r\n");
      out.write("\t\t\tupdatePlaylistView(mediaItemId);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tthis.showAlbum = function(albumId) {\r\n");
      out.write("\t\tif(!isValidNumber(albumId)) {\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$.get(mashupMedia.contextUrl + \"app/ajax/music/album/\" + albumId, function(data) {\r\n");
      out.write("\t\t\t$(\"div.panel div.content\").html(data);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("\t\r\n");
      out.write("\tthis.playArtist = function(artistId) {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$.post(mashupMedia.contextUrl + \"app/ajax/playlist/play-artist\", {\r\n");
      out.write("\t\t\t\"artistId\" : artistId\r\n");
      out.write("\t\t}, function(data) {\r\n");
      out.write("\t\t\tvar mediaItemId = data.mediaItem.id;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar playlistId = data.mediaItem.playlistId;\r\n");
      out.write("\t\t\tmashupMedia.loadSongFromPlaylist(playlistId, mediaItemId, true);\r\n");
      out.write("\t\t});\t\t\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tthis.playAlbum = function(albumId) {\r\n");
      out.write("\t\t$.post(mashupMedia.contextUrl + \"app/ajax/playlist/play-album\", {\r\n");
      out.write("\t\t\t\"albumId\" : albumId\r\n");
      out.write("\t\t}, function(data) {\r\n");
      out.write("\t\t\tvar mediaItemId = data.mediaItem.id;\r\n");
      out.write("\t\t\tvar playlistId = data.mediaItem.playlistId;\r\n");
      out.write("\t\t\tmashupMedia.loadSongFromPlaylist(playlistId, mediaItemId, true);\r\n");
      out.write("\t\t});\t\t\r\n");
      out.write("\t};\r\n");
      out.write("\t\r\n");
      out.write("\tthis.playSong = function(songId) {\r\n");
      out.write("\t\t$.post(mashupMedia.contextUrl + \"app/ajax/playlist/play-song\", {\r\n");
      out.write("\t\t\t\"songId\" : songId\r\n");
      out.write("\t\t}, function(data) {\r\n");
      out.write("\t\t\tvar mediaItemId = data.mediaItem.id;\r\n");
      out.write("\t\t\tvar playlistId = data.mediaItem.playlistId;\r\n");
      out.write("\t\t\tmashupMedia.loadSongFromPlaylist(playlistId, mediaItemId, true);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("    this.playSongSearchResults = function() {\r\n");
      out.write("\t    var serialisedSearchForm = $(\"#quick-search\").serialize();\r\n");
      out.write("\r\n");
      out.write("   \t\t$.post(mashupMedia.contextUrl + \"app/ajax/search/media-items?\" + serialisedSearchForm, {\r\n");
      out.write("   \t\t    \"action\" : \"play\",\r\n");
      out.write("   \t\t    \"pageNumber\" : 0,\r\n");
      out.write("   \t\t    \"maximumResults\" : 500\r\n");
      out.write("   \t\t}, function(data) {\r\n");
      out.write("\t\tvar mediaItemId = data.mediaItem.id;\r\n");
      out.write("\t\tvar playlistId = data.mediaItem.playlistId;\r\n");
      out.write("\t\tmashupMedia.loadSongFromPlaylist(playlistId, mediaItemId, true);\r\n");
      out.write("   \t\t});\t    \t    \t\r\n");
      out.write("   \t    \r\n");
      out.write("    };\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\tthis.appendSongSearchResults = function() {\r\n");
      out.write("    \tvar serialisedSearchForm = $(\"#quick-search\").serialize();\r\n");
      out.write("\r\n");
      out.write("   \t\t$.post(mashupMedia.contextUrl + \"app/ajax/search/media-items?\" + serialisedSearchForm, {\r\n");
      out.write("   \t\t    \"action\" : \"append\",\r\n");
      out.write("   \t\t    \"pageNumber\" : 0,\r\n");
      out.write("   \t\t    \"maximumResults\" : 500\r\n");
      out.write("   \t\t}, function(data) {    \t\t    \r\n");
      out.write("\t\t\tvar mediaItemId = data.mediaItem.id;\r\n");
      out.write("\t\t\tvar playlistId = data.mediaItem.playlistId;\t\t\r\n");
      out.write("\t\t\tshowtSongInPlaylistIfEmpty(playlistId, mediaItemId)\t\t\r\n");
      out.write("   \t\t});\t    \t    \t\r\n");
      out.write("\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\tthis.appendArtist = function(artistId) {\r\n");
      out.write("\t\t$.post(mashupMedia.contextUrl + \"app/ajax/playlist/append-artist\", {\r\n");
      out.write("\t\t\t\"artistId\" : artistId\r\n");
      out.write("\t\t}, function(data) {\r\n");
      out.write("\t\t\tvar mediaItemId = data.mediaItem.id;\r\n");
      out.write("\t\t\tvar playlistId = data.mediaItem.playlistId;\t\t\r\n");
      out.write("\t\t\tshowtSongInPlaylistIfEmpty(playlistId, mediaItemId)\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tthis.appendAlbum = function(albumId) {\r\n");
      out.write("\t\t$.post(mashupMedia.contextUrl + \"app/ajax/playlist/append-album\", {\r\n");
      out.write("\t\t\t\"albumId\" : albumId\r\n");
      out.write("\t\t}, function(data) {\r\n");
      out.write("\t\t\tvar mediaItemId = data.mediaItem.id;\r\n");
      out.write("\t\t\tvar playlistId = data.mediaItem.playlistId;\t\t\r\n");
      out.write("\t\t\tshowtSongInPlaylistIfEmpty(playlistId, mediaItemId)\t\t\r\n");
      out.write("\t\t});\t\t\r\n");
      out.write("\t};\r\n");
      out.write("\t\r\n");
      out.write("\tthis.appendSong = function(songId) {\r\n");
      out.write("\t\t$.post(mashupMedia.contextUrl + \"app/ajax/playlist/append-song\", {\r\n");
      out.write("\t\t\t\"songId\" : songId\r\n");
      out.write("\t\t}, function(data) {\r\n");
      out.write("\t\t\tvar mediaItemId = data.mediaItem.id;\r\n");
      out.write("\t\t\tvar playlistId = data.mediaItem.playlistId;\t\t\r\n");
      out.write("\t\t\tshowtSongInPlaylistIfEmpty(playlistId, mediaItemId)\t\t\r\n");
      out.write("\t\t});\t\t\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tthis.destroyPlayer = function() {\r\n");
      out.write("\t\t$(mashupMedia.jPlayerId).jPlayer(\"destroy\");\r\n");
      out.write("\t};\r\n");
      out.write("\t\r\n");
      out.write("\tthis.clearPlayer = function() {\r\n");
      out.write("\t\tmashupMedia.destroyPlayer();\t\r\n");
      out.write("\t\tmashupMedia.showEmptySongInfo();\r\n");
      out.write("\t};\r\n");
      out.write("\t\r\n");
      out.write("\tthis.showEmptySongInfo = function() {\t\t\r\n");
      out.write("\t\tmashupMedia.showSongInfo(\"\", \"\", false, 0, 0, \"\", 0, \"\", 0);\r\n");
      out.write("\t};\r\n");
      out.write("\t\r\n");
      out.write("\tthis.showSongInfo = function(songTitle, artistName, isShowVoteButtons, albumId, mediaItemId, playlistName, playlistId, encodeStatus, artistId) {\t\t\r\n");
      out.write("\t\tif (songTitle == \"\") {\r\n");
      out.write("\t\t\tsongTitle = \"");
      if (_jspx_meth_spring_005fmessage_005f0(_jspx_page_context))
        return;
      out.write("\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar albumArtImageSrc = \"");
      if (_jspx_meth_c_005furl_005f1(_jspx_page_context))
        return;
      out.write("\";\r\n");
      out.write("\t\tif (albumId > 0) {\r\n");
      out.write("\t\t\talbumArtImageSrc = mashupMedia.contextUrl + \"app/music/album-art-thumbnail/\" + albumId;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tsongTitle = unescape(songTitle);\r\n");
      out.write("\t\tartistName = unescape(artistName);\r\n");
      out.write("\t\tplaylistName = unescape(playlistName);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"#current-song td.song-title .title\").text(songTitle);\t\r\n");
      out.write("\t\t$(\"#current-song td.song-title .artist-name\").html(\"<a href=\\\"javascript:;\\\"  rel=\\\"address:address-artist-\" + artistId + \"\\\" >\" + artistName + \"</a>\");\r\n");
      out.write("\t\tif (isShowVoteButtons) {\r\n");
      out.write("\t\t\t$(\"#current-song .vote\").show();\t\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\t$(\"#current-song .vote\").hide();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t$(\"#current-song .album-art img\").attr(\"src\", albumArtImageSrc);\r\n");
      out.write("\t\t$(\"#current-song-id\").val(mediaItemId);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif (playlistId == 0) {\r\n");
      out.write("\t\t\t$(\"#current-song span.playlist\").hide();\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\t$(\"#current-song span.playlist\").show();\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"#current-song .playlist a\").text(playlistName);\r\n");
      out.write("\t\t$(\"#current-playlist-id\").val(playlistId);\r\n");
      out.write("\t\t$(\"#current-song .playlist a\").attr(\"rel\", \"address:/address-playlist-\" + playlistId);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar encodeMessage = getAudioEncodeStatus(encodeStatus);\r\n");
      out.write("\t\t$(\"#current-song .encode\").html(encodeMessage);\r\n");
      out.write("\t};\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function showtSongInPlaylistIfEmpty(playlistId, mediaItemId) {\r\n");
      out.write("\tvar currentSongId = $(\"#current-song-id\").val();\r\n");
      out.write("\tif (currentSongId > 0) {\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tmashupMedia.loadSongFromPlaylist(playlistId, mediaItemId, false);\r\n");
      out.write("\t\r\n");
      out.write("} \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function getAudioEncodeStatus(encodeStatus) {\r\n");
      out.write("    \r\n");
      out.write("    var encodeMessage = \"\";\r\n");
      out.write("\t\t\r\n");
      out.write("\tif (encodeStatus == \"NOT-INSTALLED\") {\r\n");
      out.write("\t\tencodeMessage = \"");
      if (_jspx_meth_spring_005fmessage_005f1(_jspx_page_context))
        return;
      out.write("\";\r\n");
      out.write("\t} else if (encodeStatus == \"PROCESSING\") {\r\n");
      out.write("\tencodeMessage = \"");
      if (_jspx_meth_spring_005fmessage_005f2(_jspx_page_context))
        return;
      out.write("\";\t\t\t\r\n");
      out.write("    } else if (encodeStatus == \"ENCODED\") {\r\n");
      out.write("\tencodeMessage = \"");
      if (_jspx_meth_spring_005fmessage_005f3(_jspx_page_context))
        return;
      out.write("\";\r\n");
      out.write("    } else if (encodeStatus == \"ERROR\") {\r\n");
      out.write("\tencodeMessage = \"");
      if (_jspx_meth_spring_005fmessage_005f4(_jspx_page_context))
        return;
      out.write("\";\t\r\n");
      out.write("    } else if (encodeStatus == \"OVERRIDE\") {\r\n");
      out.write("\tencodeMessage = \"");
      if (_jspx_meth_spring_005fmessage_005f5(_jspx_page_context))
        return;
      out.write("\";\t\r\n");
      out.write("    } else {\r\n");
      out.write("\tencodeMessage = \"");
      if (_jspx_meth_spring_005fmessage_005f6(_jspx_page_context))
        return;
      out.write("\";\t    \r\n");
      out.write("    }\r\n");
      out.write("\t\r\n");
      out.write("    return encodeMessage;    \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function updatePlaylistView(mediaItemId) {\t\r\n");
      out.write("\tif ($(\"#playlist\").length < 1) {\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tif (mediaItemId == 0) {\r\n");
      out.write("\t    return;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#playlist table.songs tbody tr\").removeClass(mashupMedia.playingClass);\r\n");
      out.write("\t\r\n");
      out.write("\t$('#playlist table.songs tbody tr').each(function() {\r\n");
      out.write("\t\tvar rowId = $(this).attr(\"id\");\r\n");
      out.write("\t\tvar rowMediaItemId = parseId(rowId, \"media-id\");\r\n");
      out.write("\t\tif (mediaItemId == rowMediaItemId) {\r\n");
      out.write("\t\t\t$(this).addClass(mashupMedia.playingClass);\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function loadLink(path) {\r\n");
      out.write("\tvar windowLocation = window.location;\r\n");
      out.write("\twindowLocation = windowLocation.replace()\r\n");
      out.write("\t\r\n");
      out.write("\twindow.location = window.location + \"#\" + path;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function parseId(text, identifier) {\r\n");
      out.write("\tif (!endsWith(identifier, \"-\")) {\r\n");
      out.write("\t\tidentifier = identifier + \"-\";\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tvar regExp = new RegExp(identifier + \"\\\\d+\");\r\n");
      out.write("\tvar matchValue = text.match(regExp);\r\n");
      out.write("\tvar id = String(matchValue).replace(identifier, \"\");\r\n");
      out.write("\treturn id;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function endsWith(text, suffix) {\r\n");
      out.write("\treturn text.indexOf(suffix, text.length - suffix.length) !== -1;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function getNumberFromText(text) {\r\n");
      out.write("\tvar number = text.match(/\\d+/g);\r\n");
      out.write("\treturn number;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function textStartsWith(text, startsWithValue) {\r\n");
      out.write("\tif (text.indexOf(startsWithValue) > -1) {\r\n");
      out.write("\t\treturn true;\r\n");
      out.write("\t}\r\n");
      out.write("\treturn false;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function loadRandomAlbums(isAppend) {\r\n");
      out.write("\tif (isLoadingContent) {\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tisLoadingContent = true;\r\n");
      out.write("\t$.get(mashupMedia.contextUrl + \"app/ajax/music/random-albums\", {\r\n");
      out.write("\t    \"isAppend\" : isAppend\r\n");
      out.write("\t},\r\n");
      out.write("\t\tfunction(data) {\r\n");
      out.write("\t\t\tif (isAppend) {\r\n");
      out.write("\t\t\t\t$(\"div.panel div.content\").append(data);\t\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\t$(\"div.panel div.content\").html(data);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tpauseScrollLoadMore();\t\t\t\t\t\t\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function loadSongSearchResults(isAppend) {\r\n");
      out.write("\tif (isLoadingContent) {\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tisLoadingContent = true;\r\n");
      out.write("\r\n");
      out.write("\tvar serialisedSearchForm = $(\"#quick-search\").serialize();\r\n");
      out.write("\t\r\n");
      out.write("\t$.post(mashupMedia.contextUrl + \"app/ajax/search/media-items?\" + serialisedSearchForm, {\r\n");
      out.write("\t\t\"pageNumber\" : mashupMedia.filterPageNumber,\r\n");
      out.write("\t\t\"isAppend\" : isAppend\r\n");
      out.write("\t},\tfunction(data) {\r\n");
      out.write("\t\tif (isAppend) {\r\n");
      out.write("\t\t\t$(\"div.panel div.content\").append(data);\t\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\t$(\"div.panel div.content\").html(data);\r\n");
      out.write("\t\t}\t\t\t\t\r\n");
      out.write("\t\tpauseScrollLoadMore();\t\t\r\n");
      out.write("\t});\t\t\t\t\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function loadAlbums(isAppend) {\t\r\n");
      out.write("\tif (isLoadingContent) {\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\tisLoadingContent = true;\r\n");
      out.write("\t\r\n");
      out.write("\t$.get(\"");
      if (_jspx_meth_c_005furl_005f2(_jspx_page_context))
        return;
      out.write("\", {\r\n");
      out.write("\t\t\"pageNumber\" : mashupMedia.filterPageNumber,\r\n");
      out.write("\t\t\"searchLetter\": mashupMedia.filterAlbumsSearchLetter,\r\n");
      out.write("\t\t\"isAppend\": isAppend\r\n");
      out.write("\t}, function(data) {\r\n");
      out.write("\t\tif (isAppend) {\r\n");
      out.write("\t\t\t$(\"div.panel div.content\").append(data);\t\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\t$(\"div.panel div.content\").html(data);\r\n");
      out.write("\t\t}\t\t\t\t\r\n");
      out.write("\t\tpauseScrollLoadMore();\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function loadArtists() {\r\n");
      out.write("\t$.get(\"");
      if (_jspx_meth_c_005furl_005f3(_jspx_page_context))
        return;
      out.write("\", function(data) {\r\n");
      out.write("\t\t$(\"div.panel div.content\").html(data);\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function loadPlaylists() {\r\n");
      out.write("\t$.get(\"");
      if (_jspx_meth_c_005furl_005f4(_jspx_page_context))
        return;
      out.write("\", {\r\n");
      out.write("\t\t\"playlistType\" : \"music\"\r\n");
      out.write("\t}, function(data) {\r\n");
      out.write("\t\t$(\"div.panel div.content\").html(data);\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function loadPlaylist(playlistId) {\r\n");
      out.write("\t$.get(\"");
      if (_jspx_meth_c_005furl_005f5(_jspx_page_context))
        return;
      out.write("\" + playlistId, function(data) {\r\n");
      out.write("\t\t$(\"div.panel div.content\").html(data);\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function loadArtist(artistId) {\r\n");
      out.write("\t$.get(\"");
      if (_jspx_meth_c_005furl_005f6(_jspx_page_context))
        return;
      out.write("\" + artistId, function(data) {\r\n");
      out.write("\t\t$(\"div.panel div.content\").html(data);\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function pauseScrollLoadMore() {\r\n");
      out.write("\tsetTimeout(function() {\r\n");
      out.write("\t\tisLoadingContent = false;\r\n");
      out.write("\t}, 1000);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function closeSongPlaylist() {\r\n");
      out.write("\t$(mashupMedia.songPlaylistSelector).slideUp('slow', function() {\r\n");
      out.write("\t\tvar imagePath = \"");
      if (_jspx_meth_c_005furl_005f7(_jspx_page_context))
        return;
      out.write("\";\r\n");
      out.write("\t\t$(\"#current-song .toggle-playlist img\").attr(\"src\", imagePath);\r\n");
      out.write("\t});\t\t\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function getTextFromField(textField) {\r\n");
      out.write("\tif ($(textField).length = 0) {\r\n");
      out.write("\t\treturn \"\";\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tvar text = $(textField).val();\r\n");
      out.write("\ttext = $.trim(text);\r\n");
      out.write("\treturn text;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function endsWith(text, suffix) {\r\n");
      out.write("    return text.indexOf(suffix, text.length - suffix.length) !== -1;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function isValidNumber(value) {\r\n");
      out.write("\tif (value.length == 0 || isNaN(value)) {\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\treturn true;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function appendContentsOnScroll() {\r\n");
      out.write("    if ($(window).scrollTop() >= $(document).height() - $(window).height()) {\r\n");
      out.write("\t\r\n");
      out.write("\tvar pageNumber = mashupMedia.filterPageNumber + 1;\r\n");
      out.write("\tmashupMedia.filterPageNumber = pageNumber;\r\n");
      out.write("\t\r\n");
      out.write("\tif (textStartsWith(currentPage, addressRandomAlbums) || currentPage == \"\") {\r\n");
      out.write("\t    loadRandomAlbums(true);\r\n");
      out.write("\t} else if (textStartsWith(currentPage, addressListAlbums) || textStartsWith(currentPage, addressListFilterAlbums)) {\r\n");
      out.write("\t    loadAlbums(true);\r\n");
      out.write("\t} else if (textStartsWith(currentPage, addressQuickSearchMediaItems)) {\r\n");
      out.write("\t    loadSongSearchResults(true);    \r\n");
      out.write("\t}  \r\n");
      out.write("\t\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function getURLParameter(name) {\r\n");
      out.write("    return decodeURIComponent(\r\n");
      out.write("        (location.search.match(RegExp(\"[?|&]\"+name+'=(.+?)(&|$)'))||[,null])[1]\r\n");
      out.write("    );  \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function fireRelLink(element) {\t\r\n");
      out.write("\tvar rel = $(element).attr(\"rel\");\r\n");
      out.write("\tif (rel === undefined) {\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tif (rel.length > 0) {\r\n");
      out.write("\t\t$.address.value(rel); \r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function getHostUrl() {\r\n");
      out.write(" \tvar protocol = window.location.protocol;\r\n");
      out.write("\tvar hostUrl = protocol;\r\n");
      out.write("\thostUrl += \"//\";\r\n");
      out.write("\thostUrl += window.location.hostname;\r\n");
      out.write("\t\r\n");
      out.write("\tvar port = window.location.port;\r\n");
      out.write("\tvar portUrl = \"\";\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\tif (protocol == \"http:\" && port != 80) {\r\n");
      out.write("\t    portUrl = \":\" + port;\r\n");
      out.write("\t} else if (protocol == \"https:\" && port != 443) {\r\n");
      out.write("\t    portUrl = \":\" + port;\t    \r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\thostUrl += portUrl;\r\n");
      out.write("\thostUrl += mashupMedia.contextUrl;\r\n");
      out.write("\treturn hostUrl;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_fmt_005fsetLocale_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:setLocale
    org.apache.taglibs.standard.tag.rt.fmt.SetLocaleTag _jspx_th_fmt_005fsetLocale_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.SetLocaleTag) _005fjspx_005ftagPool_005ffmt_005fsetLocale_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.SetLocaleTag.class);
    _jspx_th_fmt_005fsetLocale_005f0.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fsetLocale_005f0.setParent(null);
    // /WEB-INF/jsp/inc/taglibs.jsp(9,0) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fsetLocale_005f0.setValue("en");
    int _jspx_eval_fmt_005fsetLocale_005f0 = _jspx_th_fmt_005fsetLocale_005f0.doStartTag();
    if (_jspx_th_fmt_005fsetLocale_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fsetLocale_0026_005fvalue_005fnobody.reuse(_jspx_th_fmt_005fsetLocale_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fsetLocale_0026_005fvalue_005fnobody.reuse(_jspx_th_fmt_005fsetLocale_005f0);
    return false;
  }

  private boolean _jspx_meth_fmt_005fsetBundle_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:setBundle
    org.apache.taglibs.standard.tag.rt.fmt.SetBundleTag _jspx_th_fmt_005fsetBundle_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.SetBundleTag) _005fjspx_005ftagPool_005ffmt_005fsetBundle_0026_005fbasename_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.SetBundleTag.class);
    _jspx_th_fmt_005fsetBundle_005f0.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fsetBundle_005f0.setParent(null);
    // /WEB-INF/jsp/inc/taglibs.jsp(10,0) name = basename type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_fmt_005fsetBundle_005f0.setBasename("messages");
    int _jspx_eval_fmt_005fsetBundle_005f0 = _jspx_th_fmt_005fsetBundle_005f0.doStartTag();
    if (_jspx_th_fmt_005fsetBundle_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fsetBundle_0026_005fbasename_005fnobody.reuse(_jspx_th_fmt_005fsetBundle_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fsetBundle_0026_005fbasename_005fnobody.reuse(_jspx_th_fmt_005fsetBundle_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f0.setParent(null);
    // /scripts/mashupmedia.jsp(29,19) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f0.setValue("/");
    int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
    if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f0 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    _jspx_th_spring_005fmessage_005f0.setPageContext(_jspx_page_context);
    _jspx_th_spring_005fmessage_005f0.setParent(null);
    // /scripts/mashupmedia.jsp(301,16) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f0.setCode("music.playlist.current-song.empty");
    int[] _jspx_push_body_count_spring_005fmessage_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_spring_005fmessage_005f0 = _jspx_th_spring_005fmessage_005f0.doStartTag();
      if (_jspx_th_spring_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_spring_005fmessage_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_spring_005fmessage_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_spring_005fmessage_005f0.doFinally();
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f1 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f1.setParent(null);
    // /scripts/mashupmedia.jsp(304,26) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f1.setValue("/images/no-album-art.png");
    int _jspx_eval_c_005furl_005f1 = _jspx_th_c_005furl_005f1.doStartTag();
    if (_jspx_th_c_005furl_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f1);
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f1 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    _jspx_th_spring_005fmessage_005f1.setPageContext(_jspx_page_context);
    _jspx_th_spring_005fmessage_005f1.setParent(null);
    // /scripts/mashupmedia.jsp(357,19) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f1.setCode("music.playlist.encode.not-installed");
    int[] _jspx_push_body_count_spring_005fmessage_005f1 = new int[] { 0 };
    try {
      int _jspx_eval_spring_005fmessage_005f1 = _jspx_th_spring_005fmessage_005f1.doStartTag();
      if (_jspx_th_spring_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_spring_005fmessage_005f1[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_spring_005fmessage_005f1.doCatch(_jspx_exception);
    } finally {
      _jspx_th_spring_005fmessage_005f1.doFinally();
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f1);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f2 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    _jspx_th_spring_005fmessage_005f2.setPageContext(_jspx_page_context);
    _jspx_th_spring_005fmessage_005f2.setParent(null);
    // /scripts/mashupmedia.jsp(359,18) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f2.setCode("music.playlist.encode.processing");
    int[] _jspx_push_body_count_spring_005fmessage_005f2 = new int[] { 0 };
    try {
      int _jspx_eval_spring_005fmessage_005f2 = _jspx_th_spring_005fmessage_005f2.doStartTag();
      if (_jspx_th_spring_005fmessage_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_spring_005fmessage_005f2[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_spring_005fmessage_005f2.doCatch(_jspx_exception);
    } finally {
      _jspx_th_spring_005fmessage_005f2.doFinally();
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f2);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f3 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    _jspx_th_spring_005fmessage_005f3.setPageContext(_jspx_page_context);
    _jspx_th_spring_005fmessage_005f3.setParent(null);
    // /scripts/mashupmedia.jsp(361,18) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f3.setCode("music.playlist.encode.processed");
    int[] _jspx_push_body_count_spring_005fmessage_005f3 = new int[] { 0 };
    try {
      int _jspx_eval_spring_005fmessage_005f3 = _jspx_th_spring_005fmessage_005f3.doStartTag();
      if (_jspx_th_spring_005fmessage_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_spring_005fmessage_005f3[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_spring_005fmessage_005f3.doCatch(_jspx_exception);
    } finally {
      _jspx_th_spring_005fmessage_005f3.doFinally();
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f3);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f4 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    _jspx_th_spring_005fmessage_005f4.setPageContext(_jspx_page_context);
    _jspx_th_spring_005fmessage_005f4.setParent(null);
    // /scripts/mashupmedia.jsp(363,18) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f4.setCode("music.playlist.encode.error");
    int[] _jspx_push_body_count_spring_005fmessage_005f4 = new int[] { 0 };
    try {
      int _jspx_eval_spring_005fmessage_005f4 = _jspx_th_spring_005fmessage_005f4.doStartTag();
      if (_jspx_th_spring_005fmessage_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_spring_005fmessage_005f4[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_spring_005fmessage_005f4.doCatch(_jspx_exception);
    } finally {
      _jspx_th_spring_005fmessage_005f4.doFinally();
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f4);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f5(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f5 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    _jspx_th_spring_005fmessage_005f5.setPageContext(_jspx_page_context);
    _jspx_th_spring_005fmessage_005f5.setParent(null);
    // /scripts/mashupmedia.jsp(365,18) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f5.setCode("music.playlist.encode.override");
    int[] _jspx_push_body_count_spring_005fmessage_005f5 = new int[] { 0 };
    try {
      int _jspx_eval_spring_005fmessage_005f5 = _jspx_th_spring_005fmessage_005f5.doStartTag();
      if (_jspx_th_spring_005fmessage_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_spring_005fmessage_005f5[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_spring_005fmessage_005f5.doCatch(_jspx_exception);
    } finally {
      _jspx_th_spring_005fmessage_005f5.doFinally();
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f5);
    }
    return false;
  }

  private boolean _jspx_meth_spring_005fmessage_005f6(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:message
    org.springframework.web.servlet.tags.MessageTag _jspx_th_spring_005fmessage_005f6 = (org.springframework.web.servlet.tags.MessageTag) _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.get(org.springframework.web.servlet.tags.MessageTag.class);
    _jspx_th_spring_005fmessage_005f6.setPageContext(_jspx_page_context);
    _jspx_th_spring_005fmessage_005f6.setParent(null);
    // /scripts/mashupmedia.jsp(367,18) name = code type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_spring_005fmessage_005f6.setCode("music.playlist.encode.process");
    int[] _jspx_push_body_count_spring_005fmessage_005f6 = new int[] { 0 };
    try {
      int _jspx_eval_spring_005fmessage_005f6 = _jspx_th_spring_005fmessage_005f6.doStartTag();
      if (_jspx_th_spring_005fmessage_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_spring_005fmessage_005f6[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_spring_005fmessage_005f6.doCatch(_jspx_exception);
    } finally {
      _jspx_th_spring_005fmessage_005f6.doFinally();
      _005fjspx_005ftagPool_005fspring_005fmessage_0026_005fcode_005fnobody.reuse(_jspx_th_spring_005fmessage_005f6);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f2 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f2.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f2.setParent(null);
    // /scripts/mashupmedia.jsp(483,8) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f2.setValue("/app/ajax/music/albums");
    int _jspx_eval_c_005furl_005f2 = _jspx_th_c_005furl_005f2.doStartTag();
    if (_jspx_th_c_005furl_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f2);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f2);
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f3 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f3.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f3.setParent(null);
    // /scripts/mashupmedia.jsp(498,8) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f3.setValue("/app/ajax/music/artists");
    int _jspx_eval_c_005furl_005f3 = _jspx_th_c_005furl_005f3.doStartTag();
    if (_jspx_th_c_005furl_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f3);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f3);
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f4 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f4.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f4.setParent(null);
    // /scripts/mashupmedia.jsp(504,8) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f4.setValue("/app/ajax/playlist/list");
    int _jspx_eval_c_005furl_005f4 = _jspx_th_c_005furl_005f4.doStartTag();
    if (_jspx_th_c_005furl_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f4);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f4);
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f5(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f5 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f5.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f5.setParent(null);
    // /scripts/mashupmedia.jsp(512,8) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f5.setValue("/app/ajax/playlist/id/");
    int _jspx_eval_c_005furl_005f5 = _jspx_th_c_005furl_005f5.doStartTag();
    if (_jspx_th_c_005furl_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f5);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f5);
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f6(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f6 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f6.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f6.setParent(null);
    // /scripts/mashupmedia.jsp(518,8) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f6.setValue("/app/ajax/music/artist/");
    int _jspx_eval_c_005furl_005f6 = _jspx_th_c_005furl_005f6.doStartTag();
    if (_jspx_th_c_005furl_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f6);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f6);
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f7(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f7 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f7.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f7.setParent(null);
    // /scripts/mashupmedia.jsp(531,19) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f7.setValue((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${themePath}/images/controls/open.png", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
    int _jspx_eval_c_005furl_005f7 = _jspx_th_c_005furl_005f7.doStartTag();
    if (_jspx_th_c_005furl_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f7);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f7);
    return false;
  }
}
